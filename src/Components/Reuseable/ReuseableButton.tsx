"use client";
import { motion } from "framer-motion";
import type { ReactNode } from "react";

interface ReusableButtonProps {
  title: string;
  icon?: ReactNode;

  className?: string;
  onClick?: () => void;
  showArrow?: boolean;
}

const ArrowIcon = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="18"
    height="17"
    viewBox="0 0 18 17"
    fill="none"
  >
    <path
      d="M1.34768 15.1469L0.817355 15.6773L1.87801 16.7379L2.40834 16.2076L1.34768 15.1469ZM16.7076 1.90833C17.0005 1.61544 17.0005 1.14057 16.7076 0.847673C16.4147 0.554779 15.9398 0.55478 15.647 0.847672L16.7076 1.90833ZM5.70818 0.847672L5.17785 0.317341L4.11719 1.378L4.64752 1.90833L5.70818 0.847672ZM16.2784 2.09752C16.6758 1.98064 16.9031 1.56375 16.7863 1.16637C16.6694 0.768985 16.2525 0.541599 15.8551 0.658483L16.2784 2.09752ZM15.5916 12.8525L16.122 13.3829L17.1826 12.3222L16.6523 11.7919L15.5916 12.8525ZM1.87801 15.6773L2.40834 16.2076L16.6523 1.96365L16.122 1.43332L15.5916 0.902992L1.34768 15.1469L1.87801 15.6773ZM16.122 1.43332L16.6523 1.96365L16.7076 1.90833L16.1773 1.378L15.647 0.847672L15.5916 0.902992L16.122 1.43332ZM5.17785 1.378L4.64752 1.90833C5.45048 2.71129 6.65341 3.04639 7.84718 3.16821C9.06453 3.29244 10.4118 3.20819 11.6457 3.04999C12.8852 2.89108 14.0406 2.65343 14.884 2.45636C15.3065 2.35764 15.6527 2.26864 15.8942 2.20404C16.015 2.17172 16.1097 2.14547 16.1749 2.12712C16.2075 2.11794 16.2327 2.11074 16.2501 2.10573C16.2588 2.10322 16.2655 2.10127 16.2703 2.09989C16.2726 2.0992 16.2745 2.09866 16.2758 2.09826C16.2765 2.09807 16.2771 2.0979 16.2775 2.09778C16.2777 2.09772 16.2779 2.09765 16.278 2.09762C16.2782 2.09757 16.2784 2.09752 16.0667 1.378C15.8551 0.658483 15.8552 0.658456 15.8552 0.658439C15.8552 0.658446 15.8553 0.658436 15.8552 0.65845C15.8551 0.658477 15.8549 0.658541 15.8546 0.658642C15.8539 0.658842 15.8527 0.659191 15.851 0.659682C15.8476 0.660666 15.8422 0.662223 15.8349 0.664325C15.8203 0.668532 15.798 0.674921 15.7684 0.683265C15.7091 0.699957 15.6206 0.724464 15.5065 0.754986C15.2783 0.816056 14.9477 0.901076 14.5427 0.995704C13.7312 1.18534 12.6284 1.41172 11.455 1.56217C10.276 1.71333 9.0558 1.78376 7.99946 1.67596C6.91955 1.56576 6.14265 1.28215 5.70818 0.847672L5.17785 1.378ZM16.122 1.43332C15.4316 1.14029 15.4315 1.1405 15.4314 1.14073C15.4313 1.14084 15.4312 1.1411 15.4311 1.14134C15.4309 1.1418 15.4307 1.14238 15.4304 1.14308C15.4298 1.14447 15.429 1.14633 15.4281 1.14865C15.4261 1.15329 15.4234 1.15976 15.42 1.16802C15.4131 1.18454 15.4034 1.20821 15.3911 1.23869C15.3664 1.29962 15.3314 1.38776 15.2884 1.50017C15.2024 1.72487 15.0844 2.04713 14.9535 2.4432C14.6925 3.23334 14.3774 4.32702 14.1665 5.53172C13.9564 6.73176 13.8441 8.07332 14.0094 9.34847C14.1749 10.625 14.6265 11.8874 15.5916 12.8525L16.122 12.3222L16.6523 11.7919C15.9952 11.1348 15.6356 10.2249 15.4969 9.15558C15.3581 8.08489 15.4485 6.90701 15.644 5.79039C15.8387 4.67844 16.1319 3.65826 16.3779 2.91369C16.5005 2.54241 16.6106 2.24211 16.6894 2.03608C16.7288 1.93313 16.7603 1.85387 16.7816 1.80124C16.7922 1.77493 16.8003 1.75529 16.8055 1.74268C16.8081 1.73638 16.81 1.73184 16.8112 1.7291C16.8118 1.72773 16.8122 1.72681 16.8124 1.72635C16.8125 1.72612 16.8125 1.72601 16.8125 1.72601L16.8125 1.72609C16.8124 1.72621 16.8124 1.72635 16.122 1.43332Z"
      fill="currentColor"
    />
  </svg>
);

export default function ReuseableButton({
  title,
  icon,

  className = "",
  onClick,
  showArrow = false,
}: ReusableButtonProps) {
  return (
    <motion.button
      className={` ${className} flex items-center border border-[#42c822] w-full md:w-fit cursor-pointer rounded-2xl px-6 py-3 text-[#42c822] font-medium text-lg   gap-4 hover:bg-gradient-to-r from-[#42c822] to-[#2A512B] hover:text-white`}
      onClick={onClick}
      whileHover={{ scale: 1.05 }}
      whileTap={{ scale: 0.95 }}
    >
      {title} {icon && <span>{icon}</span>}
      {showArrow && <ArrowIcon />}
    </motion.button>
  );
}
